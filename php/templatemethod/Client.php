<?php

include 'BankTemplate.php';

/**
 * 模板方法模式
 * 这里模拟的是去银行办理业务的流程（简化）
 *
 * 场景
        客户到银行办理业务
            取号排队
            办理具体现金|转账|企业|个人|理财业务
            给银行工作人员评分

    模板方法模式介绍
        模板方法模式是编程中经常用得到得模式。它定义了一个操作中的算法骨架，将某些步骤延迟到子类中实现。这样新的子类可以在不改变一个算法结构的前提下重新定义该算法的某些特定步骤

    核心
        处理某个流程的代码已经都具备，但是其中某个节点的代码暂时不能确定。因此，我们采用工厂方法模式，将这个节点的代码实现转移给子类完成。即：处理步骤父类中定义好，具体是新啊延迟到子类中定义


    方法回调（钩子方法）
        在软件开发中，我们可以将call翻译为调用。子类不能调用父类，而通过父类调用子类。这些调用步骤已经在父类中写好了，完全由父类控制整个过程

    什么时候用到模板方法模式
        实现一个算法时，整体步骤很固定。但是，某些部分易变。易变部分可以抽象出来，供子类实现
 */

class DrawMoney extends BankTemplate
{
    public function transact()
    {
        echo '我要取款', PHP_EOL;
    }
}


$template = new DrawMoney();

$template->process();
